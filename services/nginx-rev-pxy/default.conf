# 80->443リダイレクトのserverディレクティブ
server {
    # リッスンするポート
    listen 80;
    
    # ホスト名を並べる
    server_name _;

    # すべてのリクエストをHTTPSにリダイレクト
    return 301 https://$host$request_uri; 
}

# go-api-srvのserverディレクティブ
server { # このコンテキストにはアクセスされたときの挙動や設定
    # リッスンするポート
    #listen 80; # http
    listen 443 ssl; # https

    # ゲストOS上の証明書とキー配置設定
    ssl_certificate      /etc/nginx/ssl/server.crt;
    ssl_certificate_key  /etc/nginx/ssl/server.key;


    # ホスト名を並べる
    server_name _;

    # 出力先
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # リクエストボディ上限
    client_max_body_size 100m;

    ##URIに対する設定
    
    # api鯖宛
    location /api/ { # TODO: /apiから始まるURIを転送 /api
        rewrite ^/api/(.*) /$1 break; # apiサーバーでは/{api_v}から始まるので除去
        proxy_pass http://go-api-srv; # apiコンテナへ転送

        # クライアントのリクエストヘッダー情報をプロキシ先のバックエンドサーバーに渡す
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600; # プロキシ先からの応答に対するタイムアウト値
    }

    # # 認証鯖宛
    # location /auth/ {
    #     rewrite ^/auth/(.*) /$1 break;
    #     proxy_pass http://;

    #     # クライアントのリクエストヘッダー情報をプロキシ先のバックエンドサーバーに渡す
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_read_timeout 3600; # プロキシ先からの応答に対するタイムアウト値
    # }

    # 確認用の静的ファイル
    location / {
        root /etc/nginx/static/statics/; # 静的ファイルの場所
        index index.html;
    }
}