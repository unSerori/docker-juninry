
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on; # コンテンツに圧縮をかけてネットワーク負荷を低減

    # upstreamディレクティブ
    upstream go-api-srv {
        # リバースプロキシとサーバー間の通信方法
        server go-api-srv:4561;  # コンテナ名とポートを指定

        # ソケット通信に代える？
        # # ソケット通信のためのpuma.sockを指定
        # server unix:/tmp/gunicorn.sock; # unix:///go-api-srv/tmp/sockets/puma.sock;
    }

    # conf.d以下の設定ファイルを読み込む
    include /etc/nginx/conf.d/*.conf;
}
